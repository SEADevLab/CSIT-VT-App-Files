import { useState } from "react";
import { useMalwareFilesContext } from "../hooks/useMalwareFilesContext";
import { useForm } from "react-hook-form";

const MalwareFileZipUploadForm = () => {
  const { dispatch } = useMalwareFilesContext();
  const [filename, setFilename] = useState("");
  const [description, setDescription] = useState("");
  const [user, setUser] = useState("");
  const { register, handleSubmit } = useForm();
  const [error, setError] = useState(null);

  const onSubmit = async (e) => {
    const formData = new FormData();
    formData.append("file", e.file[0]);
    let key, value;
    const filename = (() => {
      for ([key, value] of formData.entries()) {
        let val;
        if (value instanceof File) {
          val = value.name;
        } else {
          val = value;
        }
        return val;
      }
    })();
    formData.append("filename", filename);
    formData.append("user", user);
    formData.append("description", description);
    
    console.log([...formData]);

    const response = await fetch("/api/malwarefiles/uploadzip", {
      method: "POST",
      body: formData,
    });
    const json = await response.json();

    if (!response.ok) {
      setError(json.error);
    }
    if (response.ok) {
      setError(null);
      setUser("");
      setDescription("");
      setFilename("");
      console.log("Zip File Uploaded", json);
      dispatch({ type: "CREATE_MALWAREFILES", payload: json });
    }
  };

  return (
    <form className="create" onSubmit={handleSubmit(onSubmit)}>
      <h3>Upload a Zip File</h3>

      <label>User:</label>
      <input
        type="text"
        onChange={(e) => setUser(e.target.value)}
        value={user}
      />

      <label>Description:</label>
      <input
        type="text"
        onChange={(e) => setDescription(e.target.value)}
        value={description}
      />

      <input type="file" {...register("file")} />

      <button>Upload Zip File</button>
      {error && <div className="error">{error}</div>}
    </form>
  );
};

export default MalwareFileZipUploadForm;
